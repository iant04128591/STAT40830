library(dplyr)
library(nycflights13) # Install if necessary
str(flights) # It's a tbl_df which means that it's a special kind of dplyr data frame
install.packages(nycflights13) # Install if necessary
install.packages('nycflights13') # Install if necessary
library(nycflights13) # Install if necessary
head(flights)
str(flights) # It's a tbl_df which means that it's a special kind of dplyr data frame
head(flights)
flights
glimpse(flights)
flights %>% glimpse
mtcars$something_else # NULL
flights$something_else # Warning message!
filter(flights, month == 1, day == 1)
filter(flights, month == 1, day == 1, carrier == 'B6')
flights %>% filter(month == 1, day == 1, carrier == 'B6')
flights[flights$month == 1 & flights$day == 1 & flights$carrier == 'B6', ]
flights %>% filter(month == 1 & day == 1 & carrier == 'B6')
library(magrittr)
flights %>% filter(and(month %>% equals(1), and(day %>% equals(1), carrier %>% equals('B6'))))
flights %>% filter(month == 1 | carrier == 'B6')
slice(flights, 1)
slice(flights, 5:10)
slice(flights, nrow(flights))
slice(flights, n()) # n() used here for the number of rows
flights %>% slice(1:2)
arrange(flights, sched_dep_time)
arrange(flights, month, day, dest)
arrange(flights, desc(sched_dep_time))
flights %>% arrange(desc(sched_dep_time))
head(flights)
??options
getOption("tibble.max_extra_cols")
flights
flights
options(dplyr.width = Inf)
flights
flights
flights %>% filter(month = 1)
flights %>% filter(month == 1)
flights %>% filter(month == 1) %>% arrange(origin, desc(distance))
flights %>% filter(month == 1) %>% arrange(origin, distance)
flights %>% filter(month == 1) %>% arrange(desc(origin), desc(distance))
flights %>% filter(month == 1) %>% arrange(origin, desc(distance))
flights$origin %>% unique
flights %>% filter(month == 1) %>% arrange(origin, desc(distance))
flights %>% filter(month == 1) %>% arrange(origin, desc(distance)) %>% glimpse
flights %>% filter(month == 1)
flights %>% filter(month == 1) %>% unique(month)
flights %>% filter(month == 1) %$% unique(month)
flights %>% filter(month == 1) %>% arrange(origin, desc(distance)) %>% glimpse
flights
flights
options(tibble.width = Inf)
flights
flights %>% select(distance, minute, arr_delay)
flights %>% select(distance, minute, arr_delay)
flights_small = flights %>% select(distance, minute, arr_delay)
flights %>% select(distance:arr_delay)
flights %>% select(-(distance:arr_delay))
flights %>% rename(depart_time = dep_time)
flights %>% distinct(carrier)
system.time(replicate(1e2, ans <- flights %>% distinct(origin)))
system.time(replicate(1e2, ans <- distinct(as_data_frame(flights$origin))))
system.time(replicate(1e2, ans <- flights %>% extract('origin') %>% unique))
system.time(replicate(1e2, ans <- unique(flights$origin)))
flights %>% distinct(carrier, origin)
system.time(replicate(1e2, ans <- flights %>% distinct(carrier, origin)))
system.time(replicate(1e2, ans <- distinct(flights[,c('origin', 'carrier')])))
system.time(replicate(1e2, ans <- flights %>% extract(c('origin','carrier')) %>% unique))
system.time(replicate(1e2, ans <- unique(flights[,c('origin','carrier')])))
flights %>% mutate(gain = arr_delay - dep_delay) %>% select(arr_delay, dep_delay, gain)
flights
flights %>% distinct(dest)
flights %>% select(dest) %>% distinct
flights %>% distinct(dest)
flights %>% distinct(dest) %>% length
flights %>% distinct(dest) %>% nrow
flights %>% distinct(dest,origin) %>% nrow
flights %>% distinct(dest,origin)
flights %>% distinct(dest,origin,carrier) %>% nrow
flights %>% mutate(speed = distance / (air time / 60))
flights %>% filter(origin == 'JFK')
flights %>% filter(origin == 'JFK') %>% mutate(speed = distance / (air_time / 60)) %>% select(arr_delay, speed)
flights %>% filter(origin == 'JFK') %>% mutate(speed = distance / (air_time / 60)) %>% corr(arr_delay, speed)
flights %>% filter(origin == 'JFK') %>% mutate(speed = distance / (air_time / 60)) %>% cor(arr_delay, speed)
flights %>% filter(origin == 'JFK') %>% mutate(speed = distance / (air_time / 60)) %$% cor(arr_delay, speed)
flights %>% filter(origin == 'JFK') %>% mutate(speed = distance / (air_time / 60)) %$% cor(arr_delay, speed, use = 'complete.obs')
flights %>% filter(origin == 'JFK') %>% mutate(speed = distance / (air_time / 60)) %$% cor(arr_delay, speed, use = 'complete.obs')
?magrittr
flights %>% filter(origin == "JFK") %>% mutate(speed = distance / (air_time / 60)) %$% cor(arr_delay, speed, use = "complete.obs")
flights %>% filter(origin == "JFK") %>% mutate(speed = distance / (air_time / 60)) %$% cor(speed, arr_delay, use = "complete.obs")
flights %>% distinct(dest) %>% nrow
flights %>% distinct(dest,origin) %>% nrow
flights %>% distinct(dest,origin,carrier) %>% nrow
flights %>% transmute(gain = arr_delay - dep_delay,
gain_per_hour = gain / (air_time / 60))
flights %>% transmute(gain = arr_delay - dep_delay, gain_per_hour = gain / (air_time / 60))
flights %>% transmute(gain = arr_delay - dep_delay, gain_per_hour = gain / (air_time / 60)) %>% cor(gain, gina_per_hour)
flights %>% transmute(gain = arr_delay - dep_delay, gain_per_hour = gain / (air_time / 60)) %>% cor(gain, gain_per_hour)
flights %>% transmute(gain = arr_delay - dep_delay, gain_per_hour = gain / (air_time / 60)) %$% cor(gain, gain_per_hour)
flights %>% filter(origin == "JFK") %>% mutate(speed = distance / (air_time / 60)) %>% transmute(speed_arr_delay speed_cor = cor(arr_delay, use = "complete.obs"))
flights %>% filter(origin == "JFK") %>% mutate(speed = distance / (air_time / 60))
flights %>% filter(origin == "JFK") %>% mutate(speed = distance / (air_time / 60)) %>% transmute(speed_arr_delay speed_cor = cor(speed, arr_delay, use = "complete.obs"))
flights %>% filter(origin == "JFK") %>% mutate(speed = distance / (air_time / 60)) %>% transmute(speed_arr_delay_cor = cor(speed, arr_delay, use = "complete.obs"))
flights %>% filter(origin == "JFK") %>% mutate(speed = distance / (air_time / 60)) %>% transmute(speed_arr_delay_cor = cor(speed, arr_delay, use = "complete.obs")) %>% distinct
flights %>% filter(origin == "JFK") %>% mutate(speed = distance / (air_time / 60)) %$% cor(speed, arr_delay, use = "complete.obs")
flights %>% filter(origin == "JFK") %>% mutate(speed = distance / (air_time / 60)) %>% transmute(speed_arr_delay_cor = cor(speed, arr_delay, use = "complete.obs")) %>% distinct
flights %>% filter(origin == "JFK") %>% mutate(speed = distance / (air_time / 60)) %$% cor(speed, arr_delay, use = "complete.obs")
flights %>% filter(origin == "JFK") %>% mutate(speed = distance / (air_time / 60)) %>% transmute(cor(speed, arr_delay, use = "complete.obs")) %>% distinct
flights %>% distinct(dest) %>% nrow
# destination/origin combinations
flights %>% distinct(dest,origin) %>% nrow
# destination/origin/carrier combinations
flights %>% distinct(dest,origin,carrier) %>% nrow
# Input your answers
flights %>% filter(origin == "JFK") %>% mutate(speed = distance / (air_time / 60))
flights %>% filter(origin == "JFK") %>% transmute(speed = distance / (air_time / 60), arr_delay)
flights %>% filter(origin == "JFK") %>% transmute(speed = distance / (air_time / 60), arr_delay) %$% cor(speed, arr_delay, use = "complete.obs")
flights %>% distinct(dest) %>% nrow
# destination/origin combinations
flights %>% distinct(dest,origin) %>% nrow
# destination/origin/carrier combinations
flights %>% distinct(dest,origin,carrier) %>% nrow
flights %>% filter(origin == 'JFK') %>% transmute(speed = distance / (air_time / 60), arr_delay) %$% cor(speed, arr_delay, use = 'complete.obs')
flights %>% filter(origin == "JFK") %>% mutate(speed = distance / (air_time / 60)) %>% transmute(cor(speed, arr_delay, use = "complete.obs")) %>% distinct
flights %>% filter(origin == "JFK") %>% mutate(speed = distance / (air_time / 60)) %$% cor(speed, arr_delay, use = "complete.obs")
flights %>% filter(origin == 'JFK') %>% transmute(speed = distance / (air_time / 60), arr_delay) %$% cor(speed, arr_delay, use = 'complete.obs')
flights %>% summarise(mean_arr_delay = arr_delay %>% mean(na.rm = TRUE))
flights %>% sample_n(10) # 10 random rows
flights %>% sample_frac(0.01)
install.packages("Zelig")
library("Zelig", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
install.packages("arm")
library("arm", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
install.packages("stargazer")
library("stargazer", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
install.packages("rvest")
library(rvest)
lego_movie <- html("http://www.imdb.com/title/tt1490017/")
lego_movie <- read_html("http://www.imdb.com/title/tt1490017/")
lego_movie
lego_movie %>%
html_node("strong span") %>%
html_text() %>%
as.numeric()
lego_movie %>%
html_nodes("#titleCast .itemprop span") %>%
html_text()
race <- read_html("http://www.sportinglife.com/racing/racecards/13-11-2016/cheltenham/racecard/752362/sky-bet-supreme-trial-novices-hurdle-grade-2-registered-as-the-sharp-novices-hurdle")
race
race %>%
html_node("#racecard") %>%
html_text() %>%
as.numeric()
race %>%
html_node("#racecard") %>%
html_text()
race %>%
html_node("#racecard")
race %>%
html_node("#racecard tbody")
race %>%
html_node("#racecard tbody tr")
race %>%
html_node("#racecard tbody tr .horse-dtl")
race %>%
html_node("#racecard tbody tr .horse-dtl.name")
race %>%
html_node("#racecard tbody tr .horse-dtl .name")
race %>%
html_node("#racecard tbody tr .horse-dtl")
race %>%
html_node("#racecard tbody tr .horse-dtl strong")
race %>%
html_node("#racecard tbody tr .horse-dtl strong a")
race %>%
html_node("#racecard tbody tr .horse-dtl strong a text()")
race %>%
html_node("#racecard tbody tr .horse-dtl strong a") %>%
html_text()
race %>%
html_node("#racecard tbody .horse-dtl strong a")
lego_movie %>%
html_nodes("#titleCast .itemprop span")
race %>%
html_node("$(#racecard tbody tr .horse-dtl .name a")
race %>%
html_node("#racecard tbody tr .horse-dtl .name a")
race %>%
html_nodes("#racecard tbody tr .horse-dtl .name a")
race %>%
html_nodes("#racecard tbody tr .horse-dtl .name a[text()]")
race %>%
html_nodes("#racecard tbody tr .horse-dtl .name a") %>%
html_text()
race %>%
html_nodes("#racecard tbody tr .horse-dtl .name a") %>%
html_text() %>% trim
race %>%
html_nodes("#racecard tbody tr .horse-dtl .name a") %>%
html_text() %>% sub("^\\s+", " ")
race %>%
html_nodes("#racecard tbody tr .horse-dtl .name a") %>%
html_text()
gsub("^\\s+|\\s+$", "", "  ian towey  ")
race %>%
html_nodes("#racecard tbody tr .horse-dtl .name a") %>%
html_text()
race %>%
html_nodes("#racecard tbody tr .horse-dtl .name a") %>%
html_text() %>% freduce(val,sub("^\\s+", " ", val)
)
race %>%
html_nodes("#racecard tbody tr .horse-dtl .name a") %>%
html_text() %>% freduce(sub("^\\s+", " "))
race %>%
html_nodes("#racecard tbody tr .horse-dtl .name a") %>%
html_text()
